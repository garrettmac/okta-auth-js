{"version":3,"sources":["../../lib/OktaAuth.ts"],"names":["Emitter","require","OktaAuth","constructor","args","options","storageManager","cookies","storageUtil","StorageManager","transactionManager","TransactionManager","Object","assign","tx","status","transactionStatus","bind","resume","resumeTransaction","exists","transactionExists","_get","name","storage","get","introspect","pkce","DEFAULT_CODE_CHALLENGE_METHOD","PKCE","generateVerifier","computeChallenge","getPKCEStorage","getLegacyPKCEStorage","getHttpCache","_pending","handleLogin","redirectUri","window","location","origin","userAgent","maxClockSkew","DEFAULT_MAX_CLOCK_SKEW","session","close","closeSession","sessionExists","getSession","refresh","refreshSession","setCookieAndRedirect","_tokenQueue","PromiseQueue","token","prepareTokenParams","exchangeCodeForTokens","getWithoutPrompt","getWithPopup","getWithRedirect","parseFromUrl","decode","decodeToken","revoke","revokeToken","renew","renewToken","renewTokensWithRefresh","renewTokens","getUserInfo","verify","verifyToken","isLoginRedirect","syncMethods","keys","forEach","key","indexOf","method","prototype","push","_setLocation","url","_getHistory","history","_getLocation","_getDocument","document","idx","authenticate","register","cancel","recoverPassword","handleInteractionCodeRedirect","startAuthTransaction","fingerprint","emitter","tokenManager","TokenManager","authStateManager","AuthStateManager","start","updateAuthState","stop","isInteractionRequired","isInteractionRequiredError","error","signIn","opts","useInteractionCodeFlow","signInWithCredentials","_postToTransaction","sendFingerprint","then","headers","signInWithRedirect","originalUri","additionalParams","setOriginalUri","params","scopes","clear","catch","e","errorCode","revokeAccessToken","accessToken","getTokens","accessTokenKey","getStorageKeyByType","remove","Promise","resolve","revokeRefreshToken","refreshToken","refreshTokenKey","getSignOutRedirectUrl","idToken","postLogoutRedirectUri","state","getTokensSync","logoutUrl","idTokenHint","logoutUri","encodeURIComponent","signOut","defaultUri","currentUri","href","reload","webfinger","http","isAuthenticated","timeout","authState","getAuthState","isPending","handler","timeoutId","unsubscribe","clearTimeout","setTimeout","subscribe","getUser","getIdToken","undefined","getAccessToken","getRefreshToken","storeTokensFromRedirect","tokens","setTokens","browserStorage","getSessionStorage","setItem","REFERRER_PATH_STORAGE_KEY","getOriginalUri","getItem","removeOriginalUri","removeItem","handleLoginRedirect","handleRedirect","restoreOriginalUri","replace","isPKCE","hasResponseType","responseType","Array","isArray","length","isAuthorizationCodeFlow","getIssuerOrigin","issuer","split","forgotPassword","resetPassword","unlockAccount","verifyRecoveryToken","features","constants"],"mappings":"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","sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* SDK_VERSION is defined in webpack config */ \n/* global SDK_VERSION, window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspect,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone\n} from './util';\nimport { getUserAgent } from './builderUtil';\nimport { TokenManager } from './TokenManager';\nimport http from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport StorageManager from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport { \n  authenticate,\n  cancel,\n  register,\n  recoverPassword,\n  handleInteractionCodeRedirect,\n} from './idx';\nimport { startAuthTransaction } from './idx/startAuthTransaction';\n\nconst Emitter = require('tiny-emitter');\n\nclass OktaAuth implements SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  userAgent: string;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI;\n  features: FeaturesAPI;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: typeof Emitter;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  fingerprint: FingerprintAPI;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    this.options = buildOptions(args);\n    const { storageManager, cookies, storageUtil } = this.options;\n    this.storageManager = new StorageManager(storageManager, cookies, storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager\n    }, args.transactionManager));\n  \n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          const storage = storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspect.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n      this.userAgent = getUserAgent(args, `okta-auth-js/${SDK_VERSION}`);\n    } else {\n      this.userAgent = getUserAgent(args, `okta-auth-js-server/${SDK_VERSION}`);\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirect.bind(null, this),\n      parseFromUrl: parseFromUrl.bind(null, this),\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = ['decode', 'isLoginRedirect'];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n    \n    Object.assign(this.token.getWithRedirect, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    Object.assign(this.token.parseFromUrl, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n\n    // IDX\n    this.idx = {\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      startAuthTransaction: startAuthTransaction.bind(null, this),\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n  }\n\n  start() {\n    this.tokenManager.start();\n    this.authStateManager.updateAuthState();\n  }\n\n  stop() {\n    this.tokenManager.stop();\n  }\n\n  // ES6 module users can use named exports to access all symbols\n  // CommonJS module users (CDN) need all exports on this object\n\n  // Utility methods for interaction code flow\n  isInteractionRequired(): boolean {\n    return isInteractionRequired(this);\n  }\n\n  isInteractionRequiredError(error: Error): boolean {\n    return isInteractionRequiredError(error);\n  }\n\n  async signIn(opts: SigninOptions = { useInteractionCodeFlow: true }): Promise<AuthTransaction> {\n    const useInteractionCodeFlow = opts.useInteractionCodeFlow || this.options.useInteractionCodeFlow;\n    if (useInteractionCodeFlow) {\n      return authenticate(this, opts);\n    }\n\n    // Authn V1 flow\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n  \n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<object> {\n    // Clear all local tokens\n    this.tokenManager.clear();\n  \n    return this.session.close() // DELETE /api/v1/sessions/me\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<object> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<object> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    // Clear all local tokens\n    this.tokenManager.clear();\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return http.get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  async isAuthenticated(timeout?: number): Promise<boolean> {\n    const authState = this.authStateManager.getAuthState();\n    if (!authState.isPending) {\n      return Promise.resolve(authState.isAuthenticated);\n    }\n\n    let clear, handler, timeoutId;\n    return new Promise(resolve => {\n      clear = () => {\n        this.authStateManager.unsubscribe(handler);\n        clearTimeout(timeoutId);\n      };\n      handler = ({isAuthenticated, isPending}) => {\n        if (!isPending) {\n          resolve(isAuthenticated);\n          clear();\n        }\n      };\n      timeoutId = setTimeout(() => {\n        resolve(false);\n        clear();\n      }, timeout || 60 * 1000);\n      this.authStateManager.subscribe(handler);\n      this.authStateManager.updateAuthState();\n    });\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.authStateManager.getAuthState();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.authStateManager.getAuthState();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.authStateManager.getAuthState();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.authStateManager.getAuthState();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string): void {\n    const storage = browserStorage.getSessionStorage();\n    storage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  }\n\n  getOriginalUri(): string {\n    const storage = browserStorage.getSessionStorage();\n    const originalUri = storage.getItem(REFERRER_PATH_STORAGE_KEY);\n    return originalUri;\n  }\n\n  removeOriginalUri(): void {\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens): Promise<void> {\n    const handleRedirect = async ({ isPending }) => {\n      if (isPending) {\n        return;\n      }\n\n      // Unsubscribe listener\n      this.authStateManager.unsubscribe(handleRedirect);\n\n      // Get and clear originalUri from storage\n      const originalUri = this.getOriginalUri();\n      this.removeOriginalUri();\n\n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else {\n        window.location.replace(originalUri);\n      }\n    };\n\n    // Handle redirect after authState is updated \n    this.authStateManager.subscribe(handleRedirect);\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n    } else if (this.isLoginRedirect()) {\n      await this.storeTokensFromRedirect();\n    } else {\n      this.authStateManager.unsubscribe(handleRedirect);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: string): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    return this.options.issuer.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n  \n  resetPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/credentials/reset_password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n}\n\n// Hoist feature detection functions to static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist values and utility functions for CommonJS users\nObject.assign(OktaAuth, {\n  constants,\n  isInteractionRequiredError\n});\n\nexport default OktaAuth;\n"],"file":"OktaAuth.js"}