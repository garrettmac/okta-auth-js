{"version":3,"sources":["../../../lib/idx/authenticate.ts"],"names":["flow","Identify","SelectAuthenticator","EnrollOrChallengeAuthenticator","ReEnrollAuthenticator","RedirectIdp","authenticate","authClient","options"],"mappings":";;;;AAMA;;AACA;;AAYA,MAAMA,IAAqB,GAAG;AAC5B,cAAYC,qBADgB;AAE5B,uCAAqCC,gCAFT;AAG5B,6BAA2BC,2CAHC;AAI5B,4BAA0BC,kCAJE;AAK5B,kBAAgBC;AALY,CAA9B;;AAgBO,eAAeC,YAAf,CACLC,UADK,EACiBC,OADjB,EAEqB;AAC1B,SAAO,cAAID,UAAJ,EAAgB,EACrB,GAAGC,OADkB;AAErBR,IAAAA;AAFqB,GAAhB,CAAP;AAID","sourcesContent":["import { AuthTransaction } from '../tx';\nimport { \n  OktaAuth,\n  IdxOptions,\n  RemediationFlow,\n} from '../types';\nimport { run } from './run';\nimport { \n  Identify,\n  IdentifyValues,\n  SelectAuthenticator,\n  SelectAuthenticatorValues,\n  EnrollOrChallengeAuthenticator,\n  EnrollOrChallengeAuthenticatorValues,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorValues,\n  RedirectIdp\n} from './remediators';\n\nconst flow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticator,\n  'challenge-authenticator': EnrollOrChallengeAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'redirect-idp': RedirectIdp\n};\n\nexport interface AuthenticationOptions extends \n  IdxOptions,\n  IdentifyValues,\n  SelectAuthenticatorValues,\n  EnrollOrChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues {\n}\n\nexport async function authenticate(\n  authClient: OktaAuth, options: AuthenticationOptions\n): Promise<AuthTransaction> {\n  return run(authClient, { \n    ...options, \n    flow,\n  });\n}\n"],"file":"authenticate.js"}